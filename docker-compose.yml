version: '3.8'
services:

  # postgres service
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data/db:/var/lib/postgresql/data
    networks:
      - app-network

  # qdrant service
  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    ports:
      - "6333:6333"
    volumes:
      - ./qdrant_storage:/qdrant/storage
    restart: unless-stopped
    networks:
      - app-network

  # pgadmin service
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "8008:80"
    depends_on:
      - postgres
    networks:
      - app-network

  # open-webui service with build context
  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    ports:
      - "3000:8080"
    volumes:
      - ./open-webui-data:/app/backend/data
    environment:
      OPENAI_API_BASE_URLS: ${OPENAI_API_BASE_URLS}
      OPENAI_API_KEYS: ${OPENAI_API_KEYS}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - app-network

  # # n8n workflow automation
  # n8n:
  #   image: docker.n8n.io/n8nio/n8n:latest
  #   container_name: n8n
  #   ports:
  #     - "5678:5678"
  #   volumes:
  #     - ./n8n_data:/home/node/.n8n
  #   environment:
  #     # Example n8n env vars—adjust as needed:
  #     - N8N_PROTOCOL=http
  #     - N8N_HOST=localhost
  #     - N8N_PORT=5678
  #     - N8N_EDITOR_BASE_URL=http://localhost:5678
  #     # - WEBHOOK_URL=http://localhost:5678
  #     # - N8N_SECURE_COOKIE=false
  #     #- N8N_BASIC_AUTH_ACTIVE=true
  #     #- N8N_BASIC_AUTH_USER=user
  #     #- N8N_BASIC_AUTH_PASSWORD=pass
  #   depends_on:
  #     - postgres
  #   networks:
  #     - app-network



  n8n:
    image: docker.n8n.io/n8nio/n8n:latest
    container_name: n8n
    depends_on:
      - postgres
    environment:
      - N8N_PROTOCOL=http
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - WEBHOOK_URL=http://localhost:5678
      - NGROK_AUTHTOKEN=${NGROK_AUTH_TOKEN}
      # ← Add these two:
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_RUNNERS_ENABLED=true
    volumes:
      - ./n8n_data:/home/node/.n8n
    ports:
      - "5678:5678"
    networks:
      - app-network

  ngrok:
    image: ngrok/ngrok:latest    # or ngrok/ngrok:alpine
    container_name: ngrok
    depends_on:
      - n8n
    environment:
      # this will be read by ngrok v3 as your auth token
      NGROK_AUTHTOKEN: ${NGROK_AUTH_TOKEN}
    # override the CMD (not ENTRYPOINT) — no shell, no -c flags
    command: http n8n:5678
    ports:
      - "4040:4040"  # tunnel inspector
    networks:
      - app-network


# Shared network for all services
networks:
  app-network:
    driver: bridge

